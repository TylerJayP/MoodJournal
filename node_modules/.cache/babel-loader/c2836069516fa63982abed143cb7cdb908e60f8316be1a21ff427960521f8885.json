{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\JournalV2\\\\src\\\\components\\\\MoodSelector.js\";\nimport React from 'react';\nimport MoodIcons from './MoodIcons';\n\n// Enhanced list of moods with more emotional variety\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moods = ['Happy', 'Excited', 'Peaceful', 'Grateful', 'Loved', 'Proud', 'Hopeful', 'Content', 'Calm', 'Sad', 'Frustrated', 'Tired', 'Upset', 'Anxious', 'Overwhelmed', 'Depressed', 'Angry', 'Nervous', 'Bored', 'Confused'];\nconst MoodSelector = ({\n  selectedMoods,\n  onSelectMood\n}) => {\n  // Function to handle mood toggling\n  const handleMoodToggle = mood => {\n    if (selectedMoods.includes(mood)) {\n      // If already selected, remove it\n      onSelectMood(selectedMoods.filter(m => m !== mood));\n    } else {\n      // If not selected, add it\n      onSelectMood([...selectedMoods, mood]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-moods-info\",\n      children: selectedMoods.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-moods-message\",\n        children: \"Select one or more moods that reflect how you're feeling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"selected-moods-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedMoods.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" mood\", selectedMoods.length !== 1 ? 's' : '', \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-icons\",\n      children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mood-icon ${selectedMoods.includes(mood) ? 'selected' : ''}`,\n        onClick: () => handleMoodToggle(mood),\n        children: [/*#__PURE__*/_jsxDEV(MoodIcons, {\n          mood: mood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mood-label\",\n          children: mood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, mood, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = MoodSelector;\nexport default MoodSelector;\nvar _c;\n$RefreshReg$(_c, \"MoodSelector\");","map":{"version":3,"names":["React","MoodIcons","jsxDEV","_jsxDEV","moods","MoodSelector","selectedMoods","onSelectMood","handleMoodToggle","mood","includes","filter","m","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/JournalV2/src/components/MoodSelector.js"],"sourcesContent":["import React from 'react';\nimport MoodIcons from './MoodIcons';\n\n// Enhanced list of moods with more emotional variety\nconst moods = [\n  'Happy', \n  'Excited',\n  'Peaceful',\n  'Grateful',\n  'Loved',\n  'Proud', \n  'Hopeful',\n  'Content',\n  'Calm',\n  'Sad', \n  'Frustrated', \n  'Tired', \n  'Upset', \n  'Anxious',\n  'Overwhelmed', \n  'Depressed',\n  'Angry',\n  'Nervous',\n  'Bored',\n  'Confused'\n];\n\nconst MoodSelector = ({ selectedMoods, onSelectMood }) => {\n  // Function to handle mood toggling\n  const handleMoodToggle = (mood) => {\n    if (selectedMoods.includes(mood)) {\n      // If already selected, remove it\n      onSelectMood(selectedMoods.filter(m => m !== mood));\n    } else {\n      // If not selected, add it\n      onSelectMood([...selectedMoods, mood]);\n    }\n  };\n  \n  return (\n    <div className=\"mood-section\">\n      <div className=\"selected-moods-info\">\n        {selectedMoods.length === 0 ? (\n          <p className=\"no-moods-message\">Select one or more moods that reflect how you're feeling</p>\n        ) : (\n          <p className=\"selected-moods-count\">\n            <span>{selectedMoods.length}</span> mood{selectedMoods.length !== 1 ? 's' : ''} selected\n          </p>\n        )}\n      </div>\n      \n      <div className=\"mood-icons\">\n        {moods.map(mood => (\n          <div\n            key={mood}\n            className={`mood-icon ${selectedMoods.includes(mood) ? 'selected' : ''}`}\n            onClick={() => handleMoodToggle(mood)}\n          >\n            <MoodIcons mood={mood} />\n            <span className=\"mood-label\">{mood}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MoodSelector;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,CACZ,OAAO,EACP,SAAS,EACT,UAAU,EACV,UAAU,EACV,OAAO,EACP,OAAO,EACP,SAAS,EACT,SAAS,EACT,MAAM,EACN,KAAK,EACL,YAAY,EACZ,OAAO,EACP,OAAO,EACP,SAAS,EACT,aAAa,EACb,WAAW,EACX,OAAO,EACP,SAAS,EACT,OAAO,EACP,UAAU,CACX;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAa,CAAC,KAAK;EACxD;EACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAIH,aAAa,CAACI,QAAQ,CAACD,IAAI,CAAC,EAAE;MAChC;MACAF,YAAY,CAACD,aAAa,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKH,IAAI,CAAC,CAAC;IACrD,CAAC,MAAM;MACL;MACAF,YAAY,CAAC,CAAC,GAAGD,aAAa,EAAEG,IAAI,CAAC,CAAC;IACxC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BX,OAAA;MAAKU,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EACjCR,aAAa,CAACS,MAAM,KAAK,CAAC,gBACzBZ,OAAA;QAAGU,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAwD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE5FhB,OAAA;QAAGU,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACjCX,OAAA;UAAAW,QAAA,EAAOR,aAAa,CAACS;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,SAAK,EAACb,aAAa,CAACS,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,WACjF;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENhB,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBV,KAAK,CAACgB,GAAG,CAACX,IAAI,iBACbN,OAAA;QAEEU,SAAS,EAAE,aAAaP,aAAa,CAACI,QAAQ,CAACD,IAAI,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QACzEY,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAACC,IAAI,CAAE;QAAAK,QAAA,gBAEtCX,OAAA,CAACF,SAAS;UAACQ,IAAI,EAAEA;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBhB,OAAA;UAAMU,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEL;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GALrCV,IAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GAtCIjB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}