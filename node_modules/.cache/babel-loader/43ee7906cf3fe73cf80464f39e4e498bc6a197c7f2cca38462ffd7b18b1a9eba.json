{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\JournalV2\\\\src\\\\components\\\\SpeechToTextButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToTextButton = ({\n  onTranscriptReceived,\n  placeholder,\n  buttonPosition = 'right'\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [speechRecognition, setSpeechRecognition] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isSupported, setIsSupported] = useState(true);\n\n  // Initialize speech recognition on component mount\n  useEffect(() => {\n    // Check for browser support\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      setIsSupported(false);\n      setErrorMessage('Speech recognition is not supported by your browser.');\n      return;\n    }\n\n    // Initialize the SpeechRecognition object\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n\n    // Configure recognition\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US'; // Default language\n\n    // Handle results\n    recognition.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0].transcript).join(' ');\n\n      // Only send final results to parent component\n      if (event.results[0].isFinal) {\n        onTranscriptReceived(transcript);\n      }\n    };\n\n    // Handle errors\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setErrorMessage(`Error: ${event.error}`);\n      setIsListening(false);\n    };\n\n    // Handle end of speech session\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n\n    // Store the recognition object in state\n    setSpeechRecognition(recognition);\n\n    // Clean up on unmount\n    return () => {\n      if (recognition) {\n        recognition.stop();\n      }\n    };\n  }, [onTranscriptReceived]);\n\n  // Toggle speech recognition\n  const toggleListening = () => {\n    if (!isSupported) {\n      alert('Speech recognition is not supported by your browser. Please try Chrome or Edge.');\n      return;\n    }\n    if (isListening) {\n      speechRecognition.stop();\n      setIsListening(false);\n    } else {\n      setErrorMessage('');\n      speechRecognition.start();\n      setIsListening(true);\n    }\n  };\n\n  // Button position styles\n  const positionStyles = {\n    right: {\n      right: '10px'\n    },\n    left: {\n      left: '10px'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-to-text-container\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `speech-button ${isListening ? 'listening' : ''}`,\n      onClick: toggleListening,\n      title: isListening ? 'Stop dictation' : placeholder || 'Click to dictate',\n      disabled: !isSupported,\n      style: {\n        position: 'absolute',\n        bottom: '10px',\n        ...positionStyles[buttonPosition],\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '42px',\n        height: '42px',\n        borderRadius: '50%',\n        background: isListening ? '#e74c3c' : '#3498db',\n        border: 'none',\n        boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)',\n        cursor: isSupported ? 'pointer' : 'not-allowed',\n        transition: 'all 0.3s ease',\n        zIndex: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"microphone-icon\",\n        style: {\n          fontSize: '20px'\n        },\n        children: isListening ? 'ðŸ”´' : 'ðŸŽ¤'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-indicator\",\n      style: {\n        position: 'absolute',\n        bottom: '60px',\n        [buttonPosition]: '10px',\n        backgroundColor: 'rgba(52, 152, 219, 0.9)',\n        color: 'white',\n        padding: '5px 10px',\n        borderRadius: '15px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        animation: 'pulse 1.5s infinite',\n        zIndex: 2\n      },\n      children: \"Listening...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-error\",\n      style: {\n        position: 'absolute',\n        bottom: '60px',\n        [buttonPosition]: '10px',\n        backgroundColor: 'rgba(231, 76, 60, 0.9)',\n        color: 'white',\n        padding: '5px 10px',\n        borderRadius: '4px',\n        fontSize: '12px',\n        zIndex: 2\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        @keyframes pulse {\n          0% { opacity: 0.7; }\n          50% { opacity: 1; }\n          100% { opacity: 0.7; }\n        }\n        .speech-button:hover {\n          transform: scale(1.1);\n        }\n        .speech-button.listening {\n          animation: pulse 1.5s infinite;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToTextButton, \"LzNdBC2wXr9vrQLlQ9V2gzKaxGc=\");\n_c = SpeechToTextButton;\nexport default SpeechToTextButton;\nvar _c;\n$RefreshReg$(_c, \"SpeechToTextButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SpeechToTextButton","onTranscriptReceived","placeholder","buttonPosition","_s","isListening","setIsListening","speechRecognition","setSpeechRecognition","errorMessage","setErrorMessage","isSupported","setIsSupported","window","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","isFinal","onerror","console","error","onend","stop","toggleListening","alert","start","positionStyles","right","left","className","style","position","children","onClick","title","disabled","bottom","display","alignItems","justifyContent","width","height","borderRadius","background","border","boxShadow","cursor","transition","zIndex","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","color","padding","fontWeight","animation","jsx","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/JournalV2/src/components/SpeechToTextButton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SpeechToTextButton = ({ onTranscriptReceived, placeholder, buttonPosition = 'right' }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [speechRecognition, setSpeechRecognition] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSupported, setIsSupported] = useState(true);\r\n\r\n  // Initialize speech recognition on component mount\r\n  useEffect(() => {\r\n    // Check for browser support\r\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n      setIsSupported(false);\r\n      setErrorMessage('Speech recognition is not supported by your browser.');\r\n      return;\r\n    }\r\n\r\n    // Initialize the SpeechRecognition object\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    \r\n    // Configure recognition\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US'; // Default language\r\n\r\n    // Handle results\r\n    recognition.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0].transcript)\r\n        .join(' ');\r\n      \r\n      // Only send final results to parent component\r\n      if (event.results[0].isFinal) {\r\n        onTranscriptReceived(transcript);\r\n      }\r\n    };\r\n\r\n    // Handle errors\r\n    recognition.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      setErrorMessage(`Error: ${event.error}`);\r\n      setIsListening(false);\r\n    };\r\n\r\n    // Handle end of speech session\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    // Store the recognition object in state\r\n    setSpeechRecognition(recognition);\r\n\r\n    // Clean up on unmount\r\n    return () => {\r\n      if (recognition) {\r\n        recognition.stop();\r\n      }\r\n    };\r\n  }, [onTranscriptReceived]);\r\n\r\n  // Toggle speech recognition\r\n  const toggleListening = () => {\r\n    if (!isSupported) {\r\n      alert('Speech recognition is not supported by your browser. Please try Chrome or Edge.');\r\n      return;\r\n    }\r\n\r\n    if (isListening) {\r\n      speechRecognition.stop();\r\n      setIsListening(false);\r\n    } else {\r\n      setErrorMessage('');\r\n      speechRecognition.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  // Button position styles\r\n  const positionStyles = {\r\n    right: { right: '10px' },\r\n    left: { left: '10px' }\r\n  };\r\n\r\n  return (\r\n    <div className=\"speech-to-text-container\" style={{ position: 'relative' }}>\r\n      <button \r\n        className={`speech-button ${isListening ? 'listening' : ''}`}\r\n        onClick={toggleListening}\r\n        title={isListening ? 'Stop dictation' : placeholder || 'Click to dictate'}\r\n        disabled={!isSupported}\r\n        style={{\r\n          position: 'absolute',\r\n          bottom: '10px',\r\n          ...positionStyles[buttonPosition],\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '42px',\r\n          height: '42px',\r\n          borderRadius: '50%',\r\n          background: isListening ? '#e74c3c' : '#3498db',\r\n          border: 'none',\r\n          boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)',\r\n          cursor: isSupported ? 'pointer' : 'not-allowed',\r\n          transition: 'all 0.3s ease',\r\n          zIndex: 2\r\n        }}\r\n      >\r\n        <span className=\"microphone-icon\" style={{ fontSize: '20px' }}>\r\n          {isListening ? 'ðŸ”´' : 'ðŸŽ¤'}\r\n        </span>\r\n      </button>\r\n\r\n      {isListening && (\r\n        <div className=\"speech-indicator\" style={{\r\n          position: 'absolute',\r\n          bottom: '60px',\r\n          [buttonPosition]: '10px',\r\n          backgroundColor: 'rgba(52, 152, 219, 0.9)',\r\n          color: 'white',\r\n          padding: '5px 10px',\r\n          borderRadius: '15px',\r\n          fontSize: '12px',\r\n          fontWeight: 'bold',\r\n          animation: 'pulse 1.5s infinite',\r\n          zIndex: 2\r\n        }}>\r\n          Listening...\r\n        </div>\r\n      )}\r\n\r\n      {errorMessage && (\r\n        <div className=\"speech-error\" style={{\r\n          position: 'absolute',\r\n          bottom: '60px',\r\n          [buttonPosition]: '10px',\r\n          backgroundColor: 'rgba(231, 76, 60, 0.9)',\r\n          color: 'white',\r\n          padding: '5px 10px',\r\n          borderRadius: '4px',\r\n          fontSize: '12px',\r\n          zIndex: 2\r\n        }}>\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n\r\n      <style jsx>{`\r\n        @keyframes pulse {\r\n          0% { opacity: 0.7; }\r\n          50% { opacity: 1; }\r\n          100% { opacity: 0.7; }\r\n        }\r\n        .speech-button:hover {\r\n          transform: scale(1.1);\r\n        }\r\n        .speech-button.listening {\r\n          animation: pulse 1.5s infinite;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToTextButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,WAAW;EAAEC,cAAc,GAAG;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd;IACA,IAAI,EAAE,yBAAyB,IAAIgB,MAAM,CAAC,IAAI,EAAE,mBAAmB,IAAIA,MAAM,CAAC,EAAE;MAC9ED,cAAc,CAAC,KAAK,CAAC;MACrBF,eAAe,CAAC,sDAAsD,CAAC;MACvE;IACF;;IAEA;IACA,MAAMI,iBAAiB,GAAGD,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB;IACpF,MAAMC,WAAW,GAAG,IAAIF,iBAAiB,CAAC,CAAC;;IAE3C;IACAE,WAAW,CAACC,UAAU,GAAG,IAAI;IAC7BD,WAAW,CAACE,cAAc,GAAG,IAAI;IACjCF,WAAW,CAACG,IAAI,GAAG,OAAO,CAAC,CAAC;;IAE5B;IACAH,WAAW,CAACI,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC,CACzCC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,CAACL,UAAU,CAAC,CACnCM,IAAI,CAAC,GAAG,CAAC;;MAEZ;MACA,IAAIP,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC,CAACI,OAAO,EAAE;QAC5B5B,oBAAoB,CAACqB,UAAU,CAAC;MAClC;IACF,CAAC;;IAED;IACAN,WAAW,CAACc,OAAO,GAAIT,KAAK,IAAK;MAC/BU,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEX,KAAK,CAACW,KAAK,CAAC;MACvDtB,eAAe,CAAC,UAAUW,KAAK,CAACW,KAAK,EAAE,CAAC;MACxC1B,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;;IAED;IACAU,WAAW,CAACiB,KAAK,GAAG,MAAM;MACxB3B,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;;IAED;IACAE,oBAAoB,CAACQ,WAAW,CAAC;;IAEjC;IACA,OAAO,MAAM;MACX,IAAIA,WAAW,EAAE;QACfA,WAAW,CAACkB,IAAI,CAAC,CAAC;MACpB;IACF,CAAC;EACH,CAAC,EAAE,CAACjC,oBAAoB,CAAC,CAAC;;EAE1B;EACA,MAAMkC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACxB,WAAW,EAAE;MAChByB,KAAK,CAAC,iFAAiF,CAAC;MACxF;IACF;IAEA,IAAI/B,WAAW,EAAE;MACfE,iBAAiB,CAAC2B,IAAI,CAAC,CAAC;MACxB5B,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACLI,eAAe,CAAC,EAAE,CAAC;MACnBH,iBAAiB,CAAC8B,KAAK,CAAC,CAAC;MACzB/B,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMgC,cAAc,GAAG;IACrBC,KAAK,EAAE;MAAEA,KAAK,EAAE;IAAO,CAAC;IACxBC,IAAI,EAAE;MAAEA,IAAI,EAAE;IAAO;EACvB,CAAC;EAED,oBACEzC,OAAA;IAAK0C,SAAS,EAAC,0BAA0B;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBACxE7C,OAAA;MACE0C,SAAS,EAAE,iBAAiBpC,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;MAC7DwC,OAAO,EAAEV,eAAgB;MACzBW,KAAK,EAAEzC,WAAW,GAAG,gBAAgB,GAAGH,WAAW,IAAI,kBAAmB;MAC1E6C,QAAQ,EAAE,CAACpC,WAAY;MACvB+B,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBK,MAAM,EAAE,MAAM;QACd,GAAGV,cAAc,CAACnC,cAAc,CAAC;QACjC8C,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,UAAU,EAAElD,WAAW,GAAG,SAAS,GAAG,SAAS;QAC/CmD,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE,8BAA8B;QACzCC,MAAM,EAAE/C,WAAW,GAAG,SAAS,GAAG,aAAa;QAC/CgD,UAAU,EAAE,eAAe;QAC3BC,MAAM,EAAE;MACV,CAAE;MAAAhB,QAAA,eAEF7C,OAAA;QAAM0C,SAAS,EAAC,iBAAiB;QAACC,KAAK,EAAE;UAAEmB,QAAQ,EAAE;QAAO,CAAE;QAAAjB,QAAA,EAC3DvC,WAAW,GAAG,IAAI,GAAG;MAAI;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAER5D,WAAW,iBACVN,OAAA;MAAK0C,SAAS,EAAC,kBAAkB;MAACC,KAAK,EAAE;QACvCC,QAAQ,EAAE,UAAU;QACpBK,MAAM,EAAE,MAAM;QACd,CAAC7C,cAAc,GAAG,MAAM;QACxB+D,eAAe,EAAE,yBAAyB;QAC1CC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE,UAAU;QACnBd,YAAY,EAAE,MAAM;QACpBO,QAAQ,EAAE,MAAM;QAChBQ,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE,qBAAqB;QAChCV,MAAM,EAAE;MACV,CAAE;MAAAhB,QAAA,EAAC;IAEH;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,EAEAxD,YAAY,iBACXV,OAAA;MAAK0C,SAAS,EAAC,cAAc;MAACC,KAAK,EAAE;QACnCC,QAAQ,EAAE,UAAU;QACpBK,MAAM,EAAE,MAAM;QACd,CAAC7C,cAAc,GAAG,MAAM;QACxB+D,eAAe,EAAE,wBAAwB;QACzCC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE,UAAU;QACnBd,YAAY,EAAE,KAAK;QACnBO,QAAQ,EAAE,MAAM;QAChBD,MAAM,EAAE;MACV,CAAE;MAAAhB,QAAA,EACCnC;IAAY;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN,eAEDlE,OAAA;MAAOwE,GAAG;MAAA3B,QAAA,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAjKIJ,kBAAkB;AAAAwE,EAAA,GAAlBxE,kBAAkB;AAmKxB,eAAeA,kBAAkB;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}