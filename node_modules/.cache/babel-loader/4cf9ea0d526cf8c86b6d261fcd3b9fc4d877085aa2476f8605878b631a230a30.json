{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\JournalV2\\\\src\\\\components\\\\SpeechToTextButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Enhanced SpeechToTextButton with a more elegant design\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToTextButton = ({\n  onTranscriptReceived,\n  label = \"Too tired to type? Talk it out\"\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [speechRecognition, setSpeechRecognition] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isSupported, setIsSupported] = useState(true);\n  const [animationActive, setAnimationActive] = useState(false);\n\n  // Initialize speech recognition on component mount\n  useEffect(() => {\n    // Check for browser support\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      setIsSupported(false);\n      setErrorMessage('Speech recognition is not supported by your browser.');\n      return;\n    }\n\n    // Initialize the SpeechRecognition object\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n\n    // Configure recognition\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US'; // Default language\n\n    // Handle results\n    recognition.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0].transcript).join(' ');\n\n      // Only send final results to parent component\n      if (event.results[0].isFinal) {\n        onTranscriptReceived(transcript);\n      }\n    };\n\n    // Handle errors\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setErrorMessage(`Error: ${event.error}`);\n      setIsListening(false);\n      setAnimationActive(false);\n    };\n\n    // Handle end of speech session\n    recognition.onend = () => {\n      setIsListening(false);\n      setAnimationActive(false);\n    };\n\n    // Store the recognition object in state\n    setSpeechRecognition(recognition);\n\n    // Clean up on unmount\n    return () => {\n      if (recognition) {\n        recognition.stop();\n      }\n    };\n  }, [onTranscriptReceived]);\n\n  // Toggle speech recognition\n  const toggleListening = () => {\n    if (!isSupported) {\n      alert('Speech recognition is not supported by your browser. Please try Chrome, Edge, or Safari.');\n      return;\n    }\n    if (isListening) {\n      speechRecognition.stop();\n      setIsListening(false);\n      setAnimationActive(false);\n    } else {\n      setErrorMessage('');\n      speechRecognition.start();\n      setIsListening(true);\n      // Start animation with a slight delay for better visual effect\n      setTimeout(() => setAnimationActive(true), 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-control-wrapper\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-error-banner\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `speech-control ${isListening ? 'listening' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speech-prompt\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `speech-button ${isListening ? 'listening' : ''}`,\n        onClick: toggleListening,\n        title: isListening ? 'Click to stop dictation' : 'Click to start dictation',\n        disabled: !isSupported,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"microphone-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-base\",\n            children: \"\\uD83C\\uDFA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `speech-waves ${animationActive ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"wave wave1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"wave wave2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"wave wave3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"speech-button-text\",\n          children: isListening ? 'Listening...' : 'Start Speaking'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToTextButton, \"lYyzjCJXlEwNJW9T9PFrTQdOVvQ=\");\n_c = SpeechToTextButton;\nexport default SpeechToTextButton;\nvar _c;\n$RefreshReg$(_c, \"SpeechToTextButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SpeechToTextButton","onTranscriptReceived","label","_s","isListening","setIsListening","speechRecognition","setSpeechRecognition","errorMessage","setErrorMessage","isSupported","setIsSupported","animationActive","setAnimationActive","window","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","isFinal","onerror","console","error","onend","stop","toggleListening","alert","start","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/JournalV2/src/components/SpeechToTextButton.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Enhanced SpeechToTextButton with a more elegant design\r\n  const SpeechToTextButton = ({ onTranscriptReceived, label = \"Too tired to type? Talk it out\" }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [speechRecognition, setSpeechRecognition] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSupported, setIsSupported] = useState(true);\r\n  const [animationActive, setAnimationActive] = useState(false);\r\n\r\n  // Initialize speech recognition on component mount\r\n  useEffect(() => {\r\n    // Check for browser support\r\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n      setIsSupported(false);\r\n      setErrorMessage('Speech recognition is not supported by your browser.');\r\n      return;\r\n    }\r\n\r\n    // Initialize the SpeechRecognition object\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    \r\n    // Configure recognition\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US'; // Default language\r\n\r\n    // Handle results\r\n    recognition.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0].transcript)\r\n        .join(' ');\r\n      \r\n      // Only send final results to parent component\r\n      if (event.results[0].isFinal) {\r\n        onTranscriptReceived(transcript);\r\n      }\r\n    };\r\n\r\n    // Handle errors\r\n    recognition.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      setErrorMessage(`Error: ${event.error}`);\r\n      setIsListening(false);\r\n      setAnimationActive(false);\r\n    };\r\n\r\n    // Handle end of speech session\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n      setAnimationActive(false);\r\n    };\r\n\r\n    // Store the recognition object in state\r\n    setSpeechRecognition(recognition);\r\n\r\n    // Clean up on unmount\r\n    return () => {\r\n      if (recognition) {\r\n        recognition.stop();\r\n      }\r\n    };\r\n  }, [onTranscriptReceived]);\r\n\r\n  // Toggle speech recognition\r\n  const toggleListening = () => {\r\n    if (!isSupported) {\r\n      alert('Speech recognition is not supported by your browser. Please try Chrome, Edge, or Safari.');\r\n      return;\r\n    }\r\n\r\n    if (isListening) {\r\n      speechRecognition.stop();\r\n      setIsListening(false);\r\n      setAnimationActive(false);\r\n    } else {\r\n      setErrorMessage('');\r\n      speechRecognition.start();\r\n      setIsListening(true);\r\n      // Start animation with a slight delay for better visual effect\r\n      setTimeout(() => setAnimationActive(true), 100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"speech-control-wrapper\">\r\n      {errorMessage && (\r\n        <div className=\"speech-error-banner\">\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      \r\n      <div className={`speech-control ${isListening ? 'listening' : ''}`}>\r\n        <div className=\"speech-prompt\">{label}</div>\r\n        \r\n        <button \r\n          className={`speech-button ${isListening ? 'listening' : ''}`}\r\n          onClick={toggleListening}\r\n          title={isListening ? 'Click to stop dictation' : 'Click to start dictation'}\r\n          disabled={!isSupported}\r\n        >\r\n          <div className=\"microphone-icon\">\r\n            <span className=\"icon-base\">🎤</span>\r\n            {isListening && (\r\n              <div className={`speech-waves ${animationActive ? 'active' : ''}`}>\r\n                <span className=\"wave wave1\"></span>\r\n                <span className=\"wave wave2\"></span>\r\n                <span className=\"wave wave3\"></span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <span className=\"speech-button-text\">\r\n            {isListening ? 'Listening...' : 'Start Speaking'}\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToTextButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}