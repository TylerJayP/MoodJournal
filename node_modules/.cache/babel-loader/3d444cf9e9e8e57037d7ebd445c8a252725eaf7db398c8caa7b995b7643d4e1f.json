{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\JournalV2\\\\src\\\\components\\\\Resources.js\";\nimport React from 'react';\nimport ResourceCard from './ResourceCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Resources = ({\n  recommendations\n}) => {\n  if (!recommendations || recommendations.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resources-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"resources-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"resources-icon\",\n        children: \"\\uD83E\\uDDF0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), \"Recommended Resources\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resources-description\",\n      children: \"Based on your mood patterns, these resources might be helpful:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resources-list\",\n      children: recommendations.map((resource, index) => /*#__PURE__*/_jsxDEV(ResourceCard, {\n        resource: resource\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Resources;\nexport default Resources;\nvar _c;\n$RefreshReg$(_c, \"Resources\");","map":{"version":3,"names":["React","ResourceCard","jsxDEV","_jsxDEV","Resources","recommendations","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","resource","index","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/JournalV2/src/components/Resources.js"],"sourcesContent":["import React from 'react';\r\nimport ResourceCard from './ResourceCard';\r\n\r\nconst Resources = ({ recommendations }) => {\r\n  if (!recommendations || recommendations.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"resources-container\">\r\n      <h3 className=\"resources-title\">\r\n        <span className=\"resources-icon\">ðŸ§°</span>\r\n        Recommended Resources\r\n      </h3>\r\n      \r\n      <div className=\"resources-description\">\r\n        Based on your mood patterns, these resources might be helpful:\r\n      </div>\r\n      \r\n      <div className=\"resources-list\">\r\n        {recommendations.map((resource, index) => (\r\n          <ResourceCard key={index} resource={resource} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EACzC,IAAI,CAACA,eAAe,IAAIA,eAAe,CAACC,MAAM,KAAK,CAAC,EAAE;IACpD,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA;IAAKI,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCL,OAAA;MAAII,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC7BL,OAAA;QAAMI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,yBAE5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELT,OAAA;MAAKI,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENT,OAAA;MAAKI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BH,eAAe,CAACQ,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACnCZ,OAAA,CAACF,YAAY;QAAaa,QAAQ,EAAEA;MAAS,GAA1BC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAvBIZ,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}