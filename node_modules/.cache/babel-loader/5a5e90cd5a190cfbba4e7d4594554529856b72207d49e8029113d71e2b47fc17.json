{"ast":null,"code":"const SuggestionGenerator = {\n  generateSuggestions: (stats, entries) => {\n    const suggestions = [];\n\n    // Check if we have enough data to make meaningful suggestions\n    if (!stats || entries.length < 3) {\n      return [{\n        type: 'general',\n        icon: 'üí°',\n        title: 'Keep Journaling',\n        content: 'Continue adding journal entries to receive personalized insights and suggestions based on your mood patterns.'\n      }];\n    }\n\n    // Get the most frequent mood\n    const mostFrequentMood = stats.mostFrequentMood;\n\n    // Calculate mood prevalence\n    const moodPrevalence = {};\n    Object.entries(stats.moodCounts).forEach(([mood, count]) => {\n      moodPrevalence[mood] = count / stats.totalMoodInstances;\n    });\n\n    // Check for dominant positive moods\n    const positiveModds = ['Happy', 'Excited', 'Peaceful', 'Grateful', 'Loved', 'Proud', 'Hopeful', 'Content', 'Calm'];\n    const positiveMoodCount = positiveModds.reduce((sum, mood) => sum + (stats.moodCounts[mood] || 0), 0);\n    const positiveMoodPercentage = positiveMoodCount / stats.totalMoodInstances;\n\n    // Check for dominant negative moods\n    const negativeModds = ['Sad', 'Frustrated', 'Tired', 'Upset', 'Anxious', 'Overwhelmed', 'Depressed', 'Angry', 'Nervous', 'Bored', 'Confused'];\n    const negativeMoodCount = negativeModds.reduce((sum, mood) => sum + (stats.moodCounts[mood] || 0), 0);\n    const negativeMoodPercentage = negativeMoodCount / stats.totalMoodInstances;\n\n    // Look for common tags associated with positive/negative moods\n    const tagMoodAssociations = {};\n    entries.forEach(entry => {\n      const entryMoods = Array.isArray(entry.moods) ? entry.moods : entry.mood ? [entry.mood] : [];\n      const entryTags = Array.isArray(entry.tags) ? entry.tags : [];\n      entryTags.forEach(tag => {\n        if (!tagMoodAssociations[tag]) {\n          tagMoodAssociations[tag] = {\n            positive: 0,\n            negative: 0,\n            total: 0\n          };\n        }\n        entryMoods.forEach(mood => {\n          tagMoodAssociations[tag].total++;\n          if (positiveModds.includes(mood)) {\n            tagMoodAssociations[tag].positive++;\n          } else if (negativeModds.includes(mood)) {\n            tagMoodAssociations[tag].negative++;\n          }\n        });\n      });\n    });\n\n    // Check for consistency in journaling\n    const dates = entries.map(entry => new Date(entry.date).toISOString().split('T')[0]);\n    const uniqueDates = new Set(dates);\n    const latestEntryDate = new Date(Math.max(...entries.map(entry => new Date(entry.date))));\n    const daysSinceLatestEntry = Math.floor((new Date() - latestEntryDate) / (1000 * 60 * 60 * 24));\n\n    // Generate suggestions based on analysis\n\n    // 1. Consistency suggestion\n    if (daysSinceLatestEntry > 3) {\n      suggestions.push({\n        type: 'consistency',\n        icon: 'üìÜ',\n        title: 'Get Back on Track',\n        content: `It's been ${daysSinceLatestEntry} days since your last entry. Regular journaling helps track your mood patterns and emotional well-being.`\n      });\n    } else if (uniqueDates.size < entries.length * 0.8) {\n      suggestions.push({\n        type: 'consistency',\n        icon: 'üîÑ',\n        title: 'Consistency Matters',\n        content: 'Try to journal every day, even briefly. Consistent entries provide better insights into your emotional patterns.'\n      });\n    }\n\n    // 2. Mood-based suggestions\n    if (positiveMoodPercentage > 0.7) {\n      suggestions.push({\n        type: 'positive',\n        icon: 'üåü',\n        title: 'Celebrate Your Positivity',\n        content: 'You\\'ve been experiencing a lot of positive emotions lately. Take a moment to reflect on what\\'s contributing to this positivity in your life.'\n      });\n    } else if (negativeMoodPercentage > 0.7) {\n      suggestions.push({\n        type: 'support',\n        icon: 'üíô',\n        title: 'Be Gentle With Yourself',\n        content: 'You\\'ve been experiencing some challenging emotions lately. Remember that all feelings are valid, and consider activities that boost your mood.'\n      });\n    }\n\n    // 3. Specific mood suggestions\n    if (moodPrevalence['Anxious'] > 0.3) {\n      suggestions.push({\n        type: 'wellness',\n        icon: 'üßò',\n        title: 'Managing Anxiety',\n        content: 'You\\'ve mentioned feeling anxious frequently. Consider trying mindfulness techniques or brief meditation sessions.'\n      });\n    } else if (moodPrevalence['Tired'] > 0.3) {\n      suggestions.push({\n        type: 'wellness',\n        icon: 'üí§',\n        title: 'Energy and Rest',\n        content: 'Feeling tired has been common in your entries. It might be worth reviewing your sleep routine or stress levels.'\n      });\n    }\n\n    // 4. Tag-based insights\n    const tagInsights = Object.entries(tagMoodAssociations).filter(([tag, stats]) => stats.total >= 3) // Only consider tags with enough data\n    .map(([tag, stats]) => {\n      const positiveRatio = stats.positive / stats.total;\n      const negativeRatio = stats.negative / stats.total;\n      if (positiveRatio > 0.7) {\n        return {\n          tag,\n          sentiment: 'positive',\n          strength: positiveRatio\n        };\n      } else if (negativeRatio > 0.7) {\n        return {\n          tag,\n          sentiment: 'negative',\n          strength: negativeRatio\n        };\n      }\n      return null;\n    }).filter(insight => insight !== null).sort((a, b) => b.strength - a.strength);\n    if (tagInsights.length > 0) {\n      const topInsight = tagInsights[0];\n      if (topInsight.sentiment === 'positive') {\n        suggestions.push({\n          type: 'insight',\n          icon: '‚ú®',\n          title: `Positive Influence: ${topInsight.tag}`,\n          content: `When you journal about \"${topInsight.tag}\", you tend to express more positive emotions. This may be an area that brings you joy!`\n        });\n      } else {\n        suggestions.push({\n          type: 'insight',\n          icon: 'üîç',\n          title: `Challenging Area: ${topInsight.tag}`,\n          content: `Entries tagged with \"${topInsight.tag}\" often contain more challenging emotions. This might be an area to explore further.`\n        });\n      }\n    }\n\n    // 5. Add a general suggestion if we need more\n    if (suggestions.length < 2) {\n      suggestions.push({\n        type: 'general',\n        icon: 'üìù',\n        title: 'Enhance Your Journal',\n        content: 'Try using both tags and photos in your entries to track life events alongside your emotions for richer insights.'\n      });\n    }\n\n    // Limit to 3 suggestions maximum\n    return suggestions.slice(0, 3);\n  }\n};\nexport default SuggestionGenerator;","map":{"version":3,"names":["SuggestionGenerator","generateSuggestions","stats","entries","suggestions","length","type","icon","title","content","mostFrequentMood","moodPrevalence","Object","moodCounts","forEach","mood","count","totalMoodInstances","positiveModds","positiveMoodCount","reduce","sum","positiveMoodPercentage","negativeModds","negativeMoodCount","negativeMoodPercentage","tagMoodAssociations","entry","entryMoods","Array","isArray","moods","entryTags","tags","tag","positive","negative","total","includes","dates","map","Date","date","toISOString","split","uniqueDates","Set","latestEntryDate","Math","max","daysSinceLatestEntry","floor","push","size","tagInsights","filter","positiveRatio","negativeRatio","sentiment","strength","insight","sort","a","b","topInsight","slice"],"sources":["C:/Users/tyler/OneDrive/Desktop/JournalV2/src/components/SuggestionGenerator.js"],"sourcesContent":["const SuggestionGenerator = {\r\n  generateSuggestions: (stats, entries) => {\r\n    const suggestions = [];\r\n    \r\n    // Check if we have enough data to make meaningful suggestions\r\n    if (!stats || entries.length < 3) {\r\n      return [\r\n        {\r\n          type: 'general',\r\n          icon: 'üí°',\r\n          title: 'Keep Journaling',\r\n          content: 'Continue adding journal entries to receive personalized insights and suggestions based on your mood patterns.'\r\n        }\r\n      ];\r\n    }\r\n    \r\n    // Get the most frequent mood\r\n    const mostFrequentMood = stats.mostFrequentMood;\r\n    \r\n    // Calculate mood prevalence\r\n    const moodPrevalence = {};\r\n    Object.entries(stats.moodCounts).forEach(([mood, count]) => {\r\n      moodPrevalence[mood] = count / stats.totalMoodInstances;\r\n    });\r\n    \r\n    // Check for dominant positive moods\r\n    const positiveModds = ['Happy', 'Excited', 'Peaceful', 'Grateful', 'Loved', 'Proud', 'Hopeful', 'Content', 'Calm'];\r\n    const positiveMoodCount = positiveModds.reduce((sum, mood) => \r\n      sum + (stats.moodCounts[mood] || 0), 0);\r\n    const positiveMoodPercentage = positiveMoodCount / stats.totalMoodInstances;\r\n    \r\n    // Check for dominant negative moods\r\n    const negativeModds = ['Sad', 'Frustrated', 'Tired', 'Upset', 'Anxious', 'Overwhelmed', 'Depressed', 'Angry', 'Nervous', 'Bored', 'Confused'];\r\n    const negativeMoodCount = negativeModds.reduce((sum, mood) => \r\n      sum + (stats.moodCounts[mood] || 0), 0);\r\n    const negativeMoodPercentage = negativeMoodCount / stats.totalMoodInstances;\r\n    \r\n    // Look for common tags associated with positive/negative moods\r\n    const tagMoodAssociations = {};\r\n    entries.forEach(entry => {\r\n      const entryMoods = Array.isArray(entry.moods) ? entry.moods : (entry.mood ? [entry.mood] : []);\r\n      const entryTags = Array.isArray(entry.tags) ? entry.tags : [];\r\n      \r\n      entryTags.forEach(tag => {\r\n        if (!tagMoodAssociations[tag]) {\r\n          tagMoodAssociations[tag] = {\r\n            positive: 0,\r\n            negative: 0,\r\n            total: 0\r\n          };\r\n        }\r\n        \r\n        entryMoods.forEach(mood => {\r\n          tagMoodAssociations[tag].total++;\r\n          \r\n          if (positiveModds.includes(mood)) {\r\n            tagMoodAssociations[tag].positive++;\r\n          } else if (negativeModds.includes(mood)) {\r\n            tagMoodAssociations[tag].negative++;\r\n          }\r\n        });\r\n      });\r\n    });\r\n    \r\n    // Check for consistency in journaling\r\n    const dates = entries.map(entry => new Date(entry.date).toISOString().split('T')[0]);\r\n    const uniqueDates = new Set(dates);\r\n    const latestEntryDate = new Date(Math.max(...entries.map(entry => new Date(entry.date))));\r\n    const daysSinceLatestEntry = Math.floor((new Date() - latestEntryDate) / (1000 * 60 * 60 * 24));\r\n    \r\n    // Generate suggestions based on analysis\r\n    \r\n    // 1. Consistency suggestion\r\n    if (daysSinceLatestEntry > 3) {\r\n      suggestions.push({\r\n        type: 'consistency',\r\n        icon: 'üìÜ',\r\n        title: 'Get Back on Track',\r\n        content: `It's been ${daysSinceLatestEntry} days since your last entry. Regular journaling helps track your mood patterns and emotional well-being.`\r\n      });\r\n    } else if (uniqueDates.size < entries.length * 0.8) {\r\n      suggestions.push({\r\n        type: 'consistency',\r\n        icon: 'üîÑ',\r\n        title: 'Consistency Matters',\r\n        content: 'Try to journal every day, even briefly. Consistent entries provide better insights into your emotional patterns.'\r\n      });\r\n    }\r\n    \r\n    // 2. Mood-based suggestions\r\n    if (positiveMoodPercentage > 0.7) {\r\n      suggestions.push({\r\n        type: 'positive',\r\n        icon: 'üåü',\r\n        title: 'Celebrate Your Positivity',\r\n        content: 'You\\'ve been experiencing a lot of positive emotions lately. Take a moment to reflect on what\\'s contributing to this positivity in your life.'\r\n      });\r\n    } else if (negativeMoodPercentage > 0.7) {\r\n      suggestions.push({\r\n        type: 'support',\r\n        icon: 'üíô',\r\n        title: 'Be Gentle With Yourself',\r\n        content: 'You\\'ve been experiencing some challenging emotions lately. Remember that all feelings are valid, and consider activities that boost your mood.'\r\n      });\r\n    }\r\n    \r\n    // 3. Specific mood suggestions\r\n    if (moodPrevalence['Anxious'] > 0.3) {\r\n      suggestions.push({\r\n        type: 'wellness',\r\n        icon: 'üßò',\r\n        title: 'Managing Anxiety',\r\n        content: 'You\\'ve mentioned feeling anxious frequently. Consider trying mindfulness techniques or brief meditation sessions.'\r\n      });\r\n    } else if (moodPrevalence['Tired'] > 0.3) {\r\n      suggestions.push({\r\n        type: 'wellness',\r\n        icon: 'üí§',\r\n        title: 'Energy and Rest',\r\n        content: 'Feeling tired has been common in your entries. It might be worth reviewing your sleep routine or stress levels.'\r\n      });\r\n    }\r\n    \r\n    // 4. Tag-based insights\r\n    const tagInsights = Object.entries(tagMoodAssociations)\r\n      .filter(([tag, stats]) => stats.total >= 3)  // Only consider tags with enough data\r\n      .map(([tag, stats]) => {\r\n        const positiveRatio = stats.positive / stats.total;\r\n        const negativeRatio = stats.negative / stats.total;\r\n        \r\n        if (positiveRatio > 0.7) {\r\n          return {\r\n            tag,\r\n            sentiment: 'positive',\r\n            strength: positiveRatio\r\n          };\r\n        } else if (negativeRatio > 0.7) {\r\n          return {\r\n            tag,\r\n            sentiment: 'negative',\r\n            strength: negativeRatio\r\n          };\r\n        }\r\n        return null;\r\n      })\r\n      .filter(insight => insight !== null)\r\n      .sort((a, b) => b.strength - a.strength);\r\n    \r\n    if (tagInsights.length > 0) {\r\n      const topInsight = tagInsights[0];\r\n      \r\n      if (topInsight.sentiment === 'positive') {\r\n        suggestions.push({\r\n          type: 'insight',\r\n          icon: '‚ú®',\r\n          title: `Positive Influence: ${topInsight.tag}`,\r\n          content: `When you journal about \"${topInsight.tag}\", you tend to express more positive emotions. This may be an area that brings you joy!`\r\n        });\r\n      } else {\r\n        suggestions.push({\r\n          type: 'insight',\r\n          icon: 'üîç',\r\n          title: `Challenging Area: ${topInsight.tag}`,\r\n          content: `Entries tagged with \"${topInsight.tag}\" often contain more challenging emotions. This might be an area to explore further.`\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 5. Add a general suggestion if we need more\r\n    if (suggestions.length < 2) {\r\n      suggestions.push({\r\n        type: 'general',\r\n        icon: 'üìù',\r\n        title: 'Enhance Your Journal',\r\n        content: 'Try using both tags and photos in your entries to track life events alongside your emotions for richer insights.'\r\n      });\r\n    }\r\n    \r\n    // Limit to 3 suggestions maximum\r\n    return suggestions.slice(0, 3);\r\n  }\r\n};\r\n\r\nexport default SuggestionGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}