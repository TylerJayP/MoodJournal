{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\JournalV2\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check if user is already logged in (on app load)\n  useEffect(() => {\n    const checkLoggedIn = () => {\n      const userData = localStorage.getItem('moodJournalUser');\n      if (userData) {\n        const parsedUser = JSON.parse(userData);\n\n        // Load user profile if available\n        if (parsedUser.username) {\n          const profileKey = `userProfile_${parsedUser.username}`;\n          const savedProfile = localStorage.getItem(profileKey);\n          if (savedProfile) {\n            const profileData = JSON.parse(savedProfile);\n            // Merge profile data with user data\n            parsedUser.displayName = profileData.displayName || parsedUser.username;\n            parsedUser.icon = profileData.icon || 'default';\n            parsedUser.bio = profileData.bio || '';\n          } else {\n            // Set defaults if no profile exists\n            parsedUser.displayName = parsedUser.username;\n            parsedUser.icon = 'default';\n            parsedUser.bio = '';\n          }\n        }\n        setUser(parsedUser);\n        setIsAuthenticated(true);\n      }\n      setIsLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Login function\n  const login = userData => {\n    // Check if there's a profile for this user\n    if (userData.username) {\n      const profileKey = `userProfile_${userData.username}`;\n      const savedProfile = localStorage.getItem(profileKey);\n      if (savedProfile) {\n        const profileData = JSON.parse(savedProfile);\n        // Merge profile data with user data\n        userData.displayName = profileData.displayName || userData.username;\n        userData.icon = profileData.icon || 'default';\n        userData.bio = profileData.bio || '';\n      } else {\n        // Set defaults\n        userData.displayName = userData.username;\n        userData.icon = 'default';\n        userData.bio = '';\n      }\n    }\n    setUser(userData);\n    setIsAuthenticated(true);\n\n    // Update localStorage\n    localStorage.setItem('moodJournalUser', JSON.stringify(userData));\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('moodJournalUser');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem('moodJournalUser', JSON.stringify(updatedUser));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isLoading,\n      login,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"v1LRzRO747hYRtRdhUIJv9BiM4M=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkLoggedIn","userData","localStorage","getItem","parsedUser","JSON","parse","username","profileKey","savedProfile","profileData","displayName","icon","bio","login","setItem","stringify","logout","removeItem","updateUser","updatedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/JournalV2/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Check if user is already logged in (on app load)\r\n  useEffect(() => {\r\n    const checkLoggedIn = () => {\r\n      const userData = localStorage.getItem('moodJournalUser');\r\n      \r\n      if (userData) {\r\n        const parsedUser = JSON.parse(userData);\r\n        \r\n        // Load user profile if available\r\n        if (parsedUser.username) {\r\n          const profileKey = `userProfile_${parsedUser.username}`;\r\n          const savedProfile = localStorage.getItem(profileKey);\r\n          \r\n          if (savedProfile) {\r\n            const profileData = JSON.parse(savedProfile);\r\n            // Merge profile data with user data\r\n            parsedUser.displayName = profileData.displayName || parsedUser.username;\r\n            parsedUser.icon = profileData.icon || 'default';\r\n            parsedUser.bio = profileData.bio || '';\r\n          } else {\r\n            // Set defaults if no profile exists\r\n            parsedUser.displayName = parsedUser.username;\r\n            parsedUser.icon = 'default';\r\n            parsedUser.bio = '';\r\n          }\r\n        }\r\n        \r\n        setUser(parsedUser);\r\n        setIsAuthenticated(true);\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    };\r\n    \r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = (userData) => {\r\n    // Check if there's a profile for this user\r\n    if (userData.username) {\r\n      const profileKey = `userProfile_${userData.username}`;\r\n      const savedProfile = localStorage.getItem(profileKey);\r\n      \r\n      if (savedProfile) {\r\n        const profileData = JSON.parse(savedProfile);\r\n        // Merge profile data with user data\r\n        userData.displayName = profileData.displayName || userData.username;\r\n        userData.icon = profileData.icon || 'default';\r\n        userData.bio = profileData.bio || '';\r\n      } else {\r\n        // Set defaults\r\n        userData.displayName = userData.username;\r\n        userData.icon = 'default';\r\n        userData.bio = '';\r\n      }\r\n    }\r\n    \r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    \r\n    // Update localStorage\r\n    localStorage.setItem('moodJournalUser', JSON.stringify(userData));\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('moodJournalUser');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n  \r\n  // Update user profile\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem('moodJournalUser', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      isAuthenticated,\r\n      isLoading,\r\n      login,\r\n      logout,\r\n      updateUser\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}