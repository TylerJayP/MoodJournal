{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\JournalV2\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create a new context for theme management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the theme\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n\n// Theme provider component\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  // Default theme values\n  const defaultTheme = {\n    primaryColor: '#3498db',\n    secondaryColor: '#2ecc71',\n    accentColor: '#f1c40f',\n    dangerColor: '#e74c3c',\n    backgroundColor: '#f5f5f5',\n    cardColor: '#ffffff',\n    darkMode: false\n  };\n\n  // State for current theme\n  const [theme, setTheme] = useState(defaultTheme);\n  const [isThemeLoaded, setIsThemeLoaded] = useState(false);\n\n  // Helper function to convert hex color to RGB\n  const hexToRgb = hex => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? parseInt(result[1], 16) + ', ' + parseInt(result[2], 16) + ', ' + parseInt(result[3], 16) : null;\n  };\n\n  // Load user's theme on initial render if available\n  useEffect(() => {\n    const loadTheme = () => {\n      // Try to get theme from localStorage based on current user\n      const currentUser = JSON.parse(localStorage.getItem('moodJournalUser'));\n      if (currentUser && currentUser.username) {\n        const themeKey = `userTheme_${currentUser.username}`;\n        const savedTheme = localStorage.getItem(themeKey);\n        if (savedTheme) {\n          // If theme exists in localStorage, use it\n          setTheme(JSON.parse(savedTheme));\n          // Apply saved theme\n          applyThemeToCSS(JSON.parse(savedTheme));\n        } else {\n          // If no saved theme, apply default theme\n          applyThemeToCSS(defaultTheme);\n        }\n      } else {\n        // No user logged in, apply default theme\n        applyThemeToCSS(defaultTheme);\n      }\n\n      // Mark theme as loaded\n      setIsThemeLoaded(true);\n    };\n    loadTheme();\n  }, []);\n\n  // Function to update theme\n  const updateTheme = (newTheme, username) => {\n    // Update state\n    setTheme(newTheme);\n\n    // Save to localStorage if username is provided\n    if (username) {\n      const themeKey = `userTheme_${username}`;\n      localStorage.setItem(themeKey, JSON.stringify(newTheme));\n    }\n\n    // Apply to CSS variables\n    applyThemeToCSS(newTheme);\n  };\n\n  // Function to reset theme to defaults\n  const resetTheme = username => {\n    // Reset to default theme\n    setTheme(defaultTheme);\n\n    // Save to localStorage if username is provided\n    if (username) {\n      const themeKey = `userTheme_${username}`;\n      localStorage.setItem(themeKey, JSON.stringify(defaultTheme));\n    }\n\n    // Apply to CSS variables\n    applyThemeToCSS(defaultTheme);\n  };\n\n  // Apply theme values to CSS variables\n  const applyThemeToCSS = theme => {\n    // Set hex color variables\n    document.documentElement.style.setProperty('--primary-color', theme.primaryColor);\n    document.documentElement.style.setProperty('--secondary-color', theme.secondaryColor);\n    document.documentElement.style.setProperty('--accent-color', theme.accentColor);\n    document.documentElement.style.setProperty('--danger-color', theme.dangerColor);\n    document.documentElement.style.setProperty('--background-color', theme.backgroundColor);\n    document.documentElement.style.setProperty('--card-color', theme.cardColor);\n\n    // Set RGB versions for use with opacity\n    document.documentElement.style.setProperty('--primary-color-rgb', hexToRgb(theme.primaryColor));\n    document.documentElement.style.setProperty('--secondary-color-rgb', hexToRgb(theme.secondaryColor));\n    document.documentElement.style.setProperty('--accent-color-rgb', hexToRgb(theme.accentColor));\n    document.documentElement.style.setProperty('--danger-color-rgb', hexToRgb(theme.dangerColor));\n\n    // Calculate text colors based on background brightness\n    const calculateTextColor = backgroundColor => {\n      // Convert hex to RGB\n      const r = parseInt(backgroundColor.slice(1, 3), 16);\n      const g = parseInt(backgroundColor.slice(3, 5), 16);\n      const b = parseInt(backgroundColor.slice(5, 7), 16);\n\n      // Calculate brightness (W3C formula)\n      const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n\n      // Return white for dark backgrounds, dark for light backgrounds\n      return brightness > 128 ? '#2c3e50' : '#ecf0f1';\n    };\n\n    // Set text colors based on background colors\n    document.documentElement.style.setProperty('--text-color', calculateTextColor(theme.cardColor));\n    document.documentElement.style.setProperty('--text-light-color', theme.darkMode ? '#bdc3c7' : '#7f8c8d');\n\n    // Handle dark mode\n    if (theme.darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  };\n\n  // Context value\n  const value = {\n    theme,\n    updateTheme,\n    resetTheme,\n    isThemeLoaded\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"Idd/YGm0b717cXVguZRdDp9z7/k=\");\n_c = ThemeProvider;\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","defaultTheme","primaryColor","secondaryColor","accentColor","dangerColor","backgroundColor","cardColor","darkMode","theme","setTheme","isThemeLoaded","setIsThemeLoaded","hexToRgb","hex","result","exec","parseInt","loadTheme","currentUser","JSON","parse","localStorage","getItem","username","themeKey","savedTheme","applyThemeToCSS","updateTheme","newTheme","setItem","stringify","resetTheme","document","documentElement","style","setProperty","calculateTextColor","r","slice","g","b","brightness","body","classList","add","remove","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/JournalV2/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create a new context for theme management\r\nconst ThemeContext = createContext();\r\n\r\n// Custom hook to use the theme\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\n// Theme provider component\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Default theme values\r\n  const defaultTheme = {\r\n    primaryColor: '#3498db',\r\n    secondaryColor: '#2ecc71',\r\n    accentColor: '#f1c40f',\r\n    dangerColor: '#e74c3c',\r\n    backgroundColor: '#f5f5f5',\r\n    cardColor: '#ffffff',\r\n    darkMode: false,\r\n  };\r\n  \r\n  // State for current theme\r\n  const [theme, setTheme] = useState(defaultTheme);\r\n  const [isThemeLoaded, setIsThemeLoaded] = useState(false);\r\n  \r\n  // Helper function to convert hex color to RGB\r\n  const hexToRgb = (hex) => {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? \r\n      parseInt(result[1], 16) + ', ' + \r\n      parseInt(result[2], 16) + ', ' + \r\n      parseInt(result[3], 16)\r\n      : null;\r\n  };\r\n  \r\n  // Load user's theme on initial render if available\r\n  useEffect(() => {\r\n    const loadTheme = () => {\r\n      // Try to get theme from localStorage based on current user\r\n      const currentUser = JSON.parse(localStorage.getItem('moodJournalUser'));\r\n      \r\n      if (currentUser && currentUser.username) {\r\n        const themeKey = `userTheme_${currentUser.username}`;\r\n        const savedTheme = localStorage.getItem(themeKey);\r\n        \r\n        if (savedTheme) {\r\n          // If theme exists in localStorage, use it\r\n          setTheme(JSON.parse(savedTheme));\r\n          // Apply saved theme\r\n          applyThemeToCSS(JSON.parse(savedTheme));\r\n        } else {\r\n          // If no saved theme, apply default theme\r\n          applyThemeToCSS(defaultTheme);\r\n        }\r\n      } else {\r\n        // No user logged in, apply default theme\r\n        applyThemeToCSS(defaultTheme);\r\n      }\r\n      \r\n      // Mark theme as loaded\r\n      setIsThemeLoaded(true);\r\n    };\r\n    \r\n    loadTheme();\r\n  }, []);\r\n  \r\n  // Function to update theme\r\n  const updateTheme = (newTheme, username) => {\r\n    // Update state\r\n    setTheme(newTheme);\r\n    \r\n    // Save to localStorage if username is provided\r\n    if (username) {\r\n      const themeKey = `userTheme_${username}`;\r\n      localStorage.setItem(themeKey, JSON.stringify(newTheme));\r\n    }\r\n    \r\n    // Apply to CSS variables\r\n    applyThemeToCSS(newTheme);\r\n  };\r\n  \r\n  // Function to reset theme to defaults\r\n  const resetTheme = (username) => {\r\n    // Reset to default theme\r\n    setTheme(defaultTheme);\r\n    \r\n    // Save to localStorage if username is provided\r\n    if (username) {\r\n      const themeKey = `userTheme_${username}`;\r\n      localStorage.setItem(themeKey, JSON.stringify(defaultTheme));\r\n    }\r\n    \r\n    // Apply to CSS variables\r\n    applyThemeToCSS(defaultTheme);\r\n  };\r\n  \r\n  // Apply theme values to CSS variables\r\n  const applyThemeToCSS = (theme) => {\r\n    // Set hex color variables\r\n    document.documentElement.style.setProperty('--primary-color', theme.primaryColor);\r\n    document.documentElement.style.setProperty('--secondary-color', theme.secondaryColor);\r\n    document.documentElement.style.setProperty('--accent-color', theme.accentColor);\r\n    document.documentElement.style.setProperty('--danger-color', theme.dangerColor);\r\n    document.documentElement.style.setProperty('--background-color', theme.backgroundColor);\r\n    document.documentElement.style.setProperty('--card-color', theme.cardColor);\r\n    \r\n    // Set RGB versions for use with opacity\r\n    document.documentElement.style.setProperty('--primary-color-rgb', hexToRgb(theme.primaryColor));\r\n    document.documentElement.style.setProperty('--secondary-color-rgb', hexToRgb(theme.secondaryColor));\r\n    document.documentElement.style.setProperty('--accent-color-rgb', hexToRgb(theme.accentColor));\r\n    document.documentElement.style.setProperty('--danger-color-rgb', hexToRgb(theme.dangerColor));\r\n    \r\n    // Calculate text colors based on background brightness\r\n    const calculateTextColor = (backgroundColor) => {\r\n      // Convert hex to RGB\r\n      const r = parseInt(backgroundColor.slice(1, 3), 16);\r\n      const g = parseInt(backgroundColor.slice(3, 5), 16);\r\n      const b = parseInt(backgroundColor.slice(5, 7), 16);\r\n      \r\n      // Calculate brightness (W3C formula)\r\n      const brightness = (r * 299 + g * 587 + b * 114) / 1000;\r\n      \r\n      // Return white for dark backgrounds, dark for light backgrounds\r\n      return brightness > 128 ? '#2c3e50' : '#ecf0f1';\r\n    };\r\n    \r\n    // Set text colors based on background colors\r\n    document.documentElement.style.setProperty('--text-color', calculateTextColor(theme.cardColor));\r\n    document.documentElement.style.setProperty('--text-light-color', theme.darkMode ? '#bdc3c7' : '#7f8c8d');\r\n    \r\n    // Handle dark mode\r\n    if (theme.darkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  };\r\n  \r\n  // Context value\r\n  const value = {\r\n    theme,\r\n    updateTheme,\r\n    resetTheme,\r\n    isThemeLoaded\r\n  };\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;;AAEtD;AAAAE,EAAA,CAFaD,QAAQ;AAGrB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C;EACA,MAAMC,YAAY,GAAG;IACnBC,YAAY,EAAE,SAAS;IACvBC,cAAc,EAAE,SAAS;IACzBC,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,SAAS;IACtBC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,SAAS;IACpBC,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAACU,YAAY,CAAC;EAChD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAMsB,QAAQ,GAAIC,GAAG,IAAK;IACxB,MAAMC,MAAM,GAAG,2CAA2C,CAACC,IAAI,CAACF,GAAG,CAAC;IACpE,OAAOC,MAAM,GACXE,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,GAC9BE,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,GAC9BE,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GACrB,IAAI;EACV,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACd,MAAM0B,SAAS,GAAGA,CAAA,KAAM;MACtB;MACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;MAEvE,IAAIJ,WAAW,IAAIA,WAAW,CAACK,QAAQ,EAAE;QACvC,MAAMC,QAAQ,GAAG,aAAaN,WAAW,CAACK,QAAQ,EAAE;QACpD,MAAME,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAACE,QAAQ,CAAC;QAEjD,IAAIC,UAAU,EAAE;UACd;UACAhB,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACK,UAAU,CAAC,CAAC;UAChC;UACAC,eAAe,CAACP,IAAI,CAACC,KAAK,CAACK,UAAU,CAAC,CAAC;QACzC,CAAC,MAAM;UACL;UACAC,eAAe,CAAC1B,YAAY,CAAC;QAC/B;MACF,CAAC,MAAM;QACL;QACA0B,eAAe,CAAC1B,YAAY,CAAC;MAC/B;;MAEA;MACAW,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC;IAEDM,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,WAAW,GAAGA,CAACC,QAAQ,EAAEL,QAAQ,KAAK;IAC1C;IACAd,QAAQ,CAACmB,QAAQ,CAAC;;IAElB;IACA,IAAIL,QAAQ,EAAE;MACZ,MAAMC,QAAQ,GAAG,aAAaD,QAAQ,EAAE;MACxCF,YAAY,CAACQ,OAAO,CAACL,QAAQ,EAAEL,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;IAC1D;;IAEA;IACAF,eAAe,CAACE,QAAQ,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMG,UAAU,GAAIR,QAAQ,IAAK;IAC/B;IACAd,QAAQ,CAACT,YAAY,CAAC;;IAEtB;IACA,IAAIuB,QAAQ,EAAE;MACZ,MAAMC,QAAQ,GAAG,aAAaD,QAAQ,EAAE;MACxCF,YAAY,CAACQ,OAAO,CAACL,QAAQ,EAAEL,IAAI,CAACW,SAAS,CAAC9B,YAAY,CAAC,CAAC;IAC9D;;IAEA;IACA0B,eAAe,CAAC1B,YAAY,CAAC;EAC/B,CAAC;;EAED;EACA,MAAM0B,eAAe,GAAIlB,KAAK,IAAK;IACjC;IACAwB,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAE3B,KAAK,CAACP,YAAY,CAAC;IACjF+B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAE3B,KAAK,CAACN,cAAc,CAAC;IACrF8B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,gBAAgB,EAAE3B,KAAK,CAACL,WAAW,CAAC;IAC/E6B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,gBAAgB,EAAE3B,KAAK,CAACJ,WAAW,CAAC;IAC/E4B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE3B,KAAK,CAACH,eAAe,CAAC;IACvF2B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,cAAc,EAAE3B,KAAK,CAACF,SAAS,CAAC;;IAE3E;IACA0B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,qBAAqB,EAAEvB,QAAQ,CAACJ,KAAK,CAACP,YAAY,CAAC,CAAC;IAC/F+B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,uBAAuB,EAAEvB,QAAQ,CAACJ,KAAK,CAACN,cAAc,CAAC,CAAC;IACnG8B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAEvB,QAAQ,CAACJ,KAAK,CAACL,WAAW,CAAC,CAAC;IAC7F6B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAEvB,QAAQ,CAACJ,KAAK,CAACJ,WAAW,CAAC,CAAC;;IAE7F;IACA,MAAMgC,kBAAkB,GAAI/B,eAAe,IAAK;MAC9C;MACA,MAAMgC,CAAC,GAAGrB,QAAQ,CAACX,eAAe,CAACiC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MACnD,MAAMC,CAAC,GAAGvB,QAAQ,CAACX,eAAe,CAACiC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MACnD,MAAME,CAAC,GAAGxB,QAAQ,CAACX,eAAe,CAACiC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;;MAEnD;MACA,MAAMG,UAAU,GAAG,CAACJ,CAAC,GAAG,GAAG,GAAGE,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,GAAG,IAAI,IAAI;;MAEvD;MACA,OAAOC,UAAU,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS;IACjD,CAAC;;IAED;IACAT,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,cAAc,EAAEC,kBAAkB,CAAC5B,KAAK,CAACF,SAAS,CAAC,CAAC;IAC/F0B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE3B,KAAK,CAACD,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC;;IAExG;IACA,IAAIC,KAAK,CAACD,QAAQ,EAAE;MAClByB,QAAQ,CAACU,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLZ,QAAQ,CAACU,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMC,KAAK,GAAG;IACZtC,KAAK;IACLmB,WAAW;IACXI,UAAU;IACVrB;EACF,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACqD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhD,QAAA,EACjCA;EAAQ;IAAAkD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACpD,GAAA,CA9IWF,aAAa;AAAAuD,EAAA,GAAbvD,aAAa;AAgJ1B,eAAeH,YAAY;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}